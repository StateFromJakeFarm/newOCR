#!/usr/bin/python

from imgLib.imgFuncs import *
import os
import sys
import argparse

def main():
    # Parse command line args
    parser = argparse.ArgumentParser(prog='ocr')
    parser.add_argument('-t', '--train_dir', type=str, default=None,
        help='properly format images in the given directory for the ANN to train')
    parser.add_argument('-s', '--side', type=int, default=10,
        help='length of side of converted bmp image (default is 10)')
    parser.add_argument('-k', '--keep', type=bool, default=False,
        help='flag to set whether or not to keep converted training/testing images (default is False)')
    parser.add_argument('-n', '--new', type=bool, default=False,
        help='flag to set whether or not to remake all the formatted images for a training directory if it already exists (default is False)')
    args = parser.parse_args()

    # Format the images for the ANN
    if args.train_dir and os.path.isdir(args.train_dir):
        formatted_dir = args.train_dir.split('/')[0] + 'Formatted'

        # Only remake all the images if the formatted images directory doesn't
        # exist OR the user wants to remake all the formatted images anyway
        if args.new or not os.path.isdir(formatted_dir):
        create_bmps(args.train_dir, formatted_dir, args.side)

        # DO ANN THINGS

        # Remove the old traning images directory before creating new ones
        if not args.keep and os.path.isdir(formatted_dir):
            shutil.rmtree(formatted_dir)
    else:
        print("ERROR: must provide name of properly-structured images directory")


if __name__ == '__main__':
    main()
